// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId   Int     @id @default(autoincrement())
  name     String  @db.VarChar(50)
  email    String  @unique 
  password String  @db.VarChar(50)
  address  String  @db.VarChar(30)

  orders   Order[]
  carts    Cart[]
}

model Product {
  productId      Int     @id @default(autoincrement())
  name           String  @db.VarChar(50)
  description    String  @db.VarChar(200)
  price          Float  
  stock          Int 

  orderItems     OrderItem[]
  cartItems      CartItem[]
}

model Order {
  orderId      Int      @id @default(autoincrement())
  orderDate    DateTime  
  status       String   @db.VarChar(50)
  userId       Int
  user         User     @relation(fields: [userId], references: [userId], onDelete: Cascade, onUpdate: Cascade)
  total        Float    @default(0)
  orderItems   OrderItem[]
}

model OrderItem {
  orderId      Int
  productId    Int
  quantity     Int
  order        Order      @relation(fields: [orderId], references: [orderId], onDelete: Cascade, onUpdate: Cascade)
  product      Product    @relation(fields: [productId], references: [productId], onDelete: Cascade, onUpdate: Cascade)

  @@id([orderId, productId])
}

model Cart {
  cartId      Int     @id @default(autoincrement())
  total       Float   @default(0)
  userId      Int     @unique
  user        User    @relation(fields: [userId], references: [userId], onDelete: Cascade, onUpdate: Cascade)
  cartItems   CartItem[]  
}

model CartItem {
  cartId      Int
  productId   Int
  product     Product @relation(fields: [productId], references: [productId], onDelete: Cascade, onUpdate: Cascade)
  cart        Cart    @relation(fields: [cartId], references: [cartId], onDelete: Cascade, onUpdate: Cascade)
  quantity    Int

  @@id([cartId, productId])
}

model Coupon {
  code        String @id
  discount    Int
  expiration  DateTime
}
